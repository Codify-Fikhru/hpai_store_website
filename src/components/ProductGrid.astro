---
// Define interfaces
interface Product {
  id: number;
  name: string;
  category: string;
  price: number;
  image: string;
}

interface ProductData {
  name: string;
  image: string;
  category: string;
}

const productData: ProductData[] = [
  {
    name: "Susu Kambing",
    image: "/image/susukambing.png",
    category: "Susu Kambing",
  },
  {
    name: "Minyak Zaitun",
    image: "/image/Minyak Habbatussauda.png ",
    category: "Minyak Herbal",
  },
  {
    name: "Minyak Herba Sinergi",
    image: "/image/Minyak Sinergi.png",
    category: "Minyak Herbal",
  },
  {
    name: "Supplement Immune Boost",
    image: "/image/suplemen.png",
    category: "Suplemen",
  },
  {
    name: "Vitamin C Plus Zinc",
    image: "/image/vitamin C.png",
    category: "Suplemen",
  },
  {
    name: "Pasta Gigi Herbal",
    image: "/image/PastaGigi.png",
    category: "Odol Siwak",
  },
  {
    name: "Day Cream",
    image: "/image/DayCream.png",
    category: "Day Crean",
  },
  {
    name: "Day Cream",
    image: "/image/DayCream.png",
    category: "Day Crean",
  },
  {
    name: "Day Cream",
    image: "/image/DayCream.png",
    category: "Day Crean",
  },
  {
    name: "Day Cream",
    image: "/image/DayCream.png",
    category: "Day Crean",
  },
];

const getProductPrice = (productName: string): number => {
  const prices: { [key: string]: number } = {
    "Susu Kambing": 75000,
    "Minyak Zaitun": 90000,
    "Minyak Herba Sinergi": 45000,
    "Supplement Immune Boost": 185000,
    "Vitamin C Plus Zinc": 95000,
    "Pasta Gigi Herbal": 20000,
    "Day Cream": 165000,
  };
  return prices[productName];
};

const products: Product[] = Array.from({ length: 10 }, (_, i) => {
  const currentProduct = productData[i];

  return {
    id: i + 1,
    name: currentProduct.name,
    category: currentProduct.category,
    price: getProductPrice(currentProduct.name),
    image: currentProduct.image,
  };
});
---

<div class="products">
  {
    products.map((product) => (
      <div class="product-card" data-category={product.category}>
        <img
          src={product.image}
          alt={product.name}
          class="product-image"
          onerror={`this.src='https://via.placeholder.com/300x300?text=${encodeURIComponent(product.name)}'`}
        />
        <div class="product-details">
          <h3>{product.name}</h3>
          <div class="product-footer">
            <span class="price">Rp{product.price.toLocaleString()}</span>
            <button class="btn" data-product={JSON.stringify(product)}>
              BELI
            </button>
          </div>
        </div>
      </div>
    ))
  }
</div>

<script>
  // Define Product type for client-side code
  type Product = {
    id: number;
    name: string;
    category: string;
    price: number;
    image: string;
  };

  // Handle add to cart
  function addToCart(product: Product) {
    const event = new CustomEvent("addToCart", { detail: product });
    document.dispatchEvent(event);
  }

  // Add click handlers to all buttons
  document.querySelectorAll(".btn").forEach((button) => {
    button.addEventListener("click", () => {
      try {
        const productString = button.getAttribute("data-product");
        if (productString) {
          const product = JSON.parse(productString) as Product;
          addToCart(product);
        }
      } catch (error) {
        console.error("Error parsing product data:", error);
      }
    });
  });
</script>

<style>
  .products {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: 20px;
    padding: 20px 0;
  }

  .product-card {
    background-color: white;
    border-radius: 10px;
    overflow: hidden;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .product-image {
    width: 100%;
    height: 200px;
    object-fit: cover;
  }

  .product-details {
    padding: 10px;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .product-details h3 {
    font-size: 1rem;
    margin-bottom: 8px;
    padding-inline: 6px;
  }

  .product-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px;
  }

  button {
    padding: 8px 16px;
    background-color: #14c023;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.2s ease;
  }

  button:hover {
    background-color: #14c023;
  }

  .price {
    font-weight: bold;
    color: #333;
  }
</style>
